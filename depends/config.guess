#! /bin/sh
# attempt to guess a canonical system name.
#   copyright 1992-2015 free software foundation, inc.

timestamp='2015-03-04'

# this file is free software; you can redistribute it and/or modify it
# under the terms of the gnu general public license as published by
# the free software foundation; either version 3 of the license, or
# (at your option) any later version.
#
# this program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose.  see the gnu
# general public license for more details.
#
# you should have received a copy of the gnu general public license
# along with this program; if not, see <http://www.gnu.org/licenses/>.
#
# as a special exception to the gnu general public license, if you
# distribute this file as part of a program that contains a
# configuration script generated by autoconf, you may include it under
# the same distribution terms that you use for the rest of that
# program.  this exception is an additional permission under section 7
# of the gnu general public license, version 3 ("gplv3").
#
# originally written by per bothner; maintained since 2000 by ben elliston.
#
# you can get the latest version of this script from:
# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=head
#
# please send patches to <config-patches@gnu.org>.


me=`echo "$0" | sed -e 's,.*/,,'`

usage="\
usage: $0 [option]

output the configuration name of the system \`$me' is run on.

operation modes:
  -h, --help         print this help, then exit
  -t, --time-stamp   print date of last modification, then exit
  -v, --version      print version number, then exit

report bugs and patches to <config-patches@gnu.org>."

version="\
gnu config.guess ($timestamp)

originally written by per bothner.
copyright 1992-2015 free software foundation, inc.

this is free software; see the source for copying conditions.  there is no
warranty; not even for merchantability or fitness for a particular purpose."

help="
try \`$me --help' for more information."

# parse command line
while test $# -gt 0 ; do
  case $1 in
    --time-stamp | --time* | -t )
       echo "$timestamp" ; exit ;;
    --version | -v )
       echo "$version" ; exit ;;
    --help | --h* | -h )
       echo "$usage"; exit ;;
    -- )     # stop option processing
       shift; break ;;
    - )	# use stdin as input.
       break ;;
    -* )
       echo "$me: invalid option $1$help" >&2
       exit 1 ;;
    * )
       break ;;
  esac
done

if test $# != 0; then
  echo "$me: too many arguments$help" >&2
  exit 1
fi

trap 'exit 1' 1 2 15

# cc_for_build -- compiler used by this script. note that the use of a
# compiler to aid in system detection is discouraged as it requires
# temporary files to be created and, as you can see below, it is a
# headache to deal with in a portable fashion.

# historically, `cc_for_build' used to be named `host_cc'. we still
# use `host_cc' if defined, but it is deprecated.

# portable tmp directory creation inspired by the autoconf team.

set_cc_for_build='
trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
: ${tmpdir=/tmp} ;
 { tmp=`(umask 077 && mktemp -d "$tmpdir/cgxxxxxx") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
 { test -n "$random" && tmp=$tmpdir/cg$$-$random && (umask 077 && mkdir $tmp) ; } ||
 { tmp=$tmpdir/cg-$$ && (umask 077 && mkdir $tmp) && echo "warning: creating insecure temp directory" >&2 ; } ||
 { echo "$me: cannot create a temporary directory in $tmpdir" >&2 ; exit 1 ; } ;
dummy=$tmp/dummy ;
tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
case $cc_for_build,$host_cc,$cc in
 ,,)    echo "int x;" > $dummy.c ;
	for c in cc gcc c89 c99 ; do
	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
	     cc_for_build="$c"; break ;
	  fi ;
	done ;
	if test x"$cc_for_build" = x ; then
	  cc_for_build=no_compiler_found ;
	fi
	;;
 ,,*)   cc_for_build=$cc ;;
 ,*,*)  cc_for_build=$host_cc ;;
esac ; set_cc_for_build= ;'

# this is needed to find uname on a pyramid osx when run in the bsd universe.
# (ghazi@noc.rutgers.edu 1994-08-24)
if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
	path=$path:/.attbin ; export path
fi

uname_machine=`(uname -m) 2>/dev/null` || uname_machine=unknown
uname_release=`(uname -r) 2>/dev/null` || uname_release=unknown
uname_system=`(uname -s) 2>/dev/null`  || uname_system=unknown
uname_version=`(uname -v) 2>/dev/null` || uname_version=unknown

case "${uname_system}" in
linux|gnu|gnu/*)
	# if the system lacks a compiler, then just pick glibc.
	# we could probably try harder.
	libc=gnu

	eval $set_cc_for_build
	cat <<-eof > $dummy.c
	#include <features.h>
	#if defined(__uclibc__)
	libc=uclibc
	#elif defined(__dietlibc__)
	libc=dietlibc
	#else
	libc=gnu
	#endif
	eof
	eval `$cc_for_build -e $dummy.c 2>/dev/null | grep '^libc' | sed 's, ,,g'`
	;;
esac

# note: order is significant - the case branches are not exclusive.

case "${uname_machine}:${uname_system}:${uname_release}:${uname_version}" in
    *:netbsd:*:*)
	# netbsd (nbsd) targets should (where applicable) match one or
	# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,
	# *-*-netbsdecoff* and *-*-netbsd*.  for targets that recently
	# switched to elf, *-*-netbsd* would select the old
	# object file format.  this provides both forward
	# compatibility and a consistent mechanism for selecting the
	# object file format.
	#
	# note: netbsd doesn't particularly care about the vendor
	# portion of the name.  we always set it to "unknown".
	sysctl="sysctl -n hw.machine_arch"
	uname_machine_arch=`(uname -p 2>/dev/null || \
	    /sbin/$sysctl 2>/dev/null || \
	    /usr/sbin/$sysctl 2>/dev/null || \
	    echo unknown)`
	case "${uname_machine_arch}" in
	    armeb) machine=armeb-unknown ;;
	    arm*) machine=arm-unknown ;;
	    sh3el) machine=shl-unknown ;;
	    sh3eb) machine=sh-unknown ;;
	    sh5el) machine=sh5le-unknown ;;
	    earmv*)
		arch=`echo ${uname_machine_arch} | sed -e 's,^e\(armv[0-9]\).*$,\1,'`
		endian=`echo ${uname_machine_arch} | sed -ne 's,^.*\(eb\)$,\1,p'`
		machine=${arch}${endian}-unknown
		;;
	    *) machine=${uname_machine_arch}-unknown ;;
	esac
	# the operating system including object format, if it has switched
	# to elf recently, or will in the future.
	case "${uname_machine_arch}" in
	    arm*|earm*|i386|m68k|ns32k|sh3*|sparc|vax)
		eval $set_cc_for_build
		if echo __elf__ | $cc_for_build -e - 2>/dev/null \
			| grep -q __elf__
		then
		    # once all utilities can be ecoff (netbsdecoff) or a.out (netbsdaout).
		    # return netbsd for either.  fix?
		    os=netbsd
		else
		    os=netbsdelf
		fi
		;;
	    *)
		os=netbsd
		;;
	esac
	# determine abi tags.
	case "${uname_machine_arch}" in
	    earm*)
		expr='s/^earmv[0-9]/-eabi/;s/eb$//'
		abi=`echo ${uname_machine_arch} | sed -e "$expr"`
		;;
	esac
	# the os release
	# debian gnu/netbsd machines have a different userland, and
	# thus, need a distinct triplet. however, they do not need
	# kernel version information, so it can be replaced with a
	# suitable tag, in the style of linux-gnu.
	case "${uname_version}" in
	    debian*)
		release='-gnu'
		;;
	    *)
		release=`echo ${uname_release}|sed -e 's/[-_].*/\./'`
		;;
	esac
	# since cpu_type-manufacturer-kernel-operating_system:
	# contains redundant information, the shorter form:
	# cpu_type-manufacturer-operating_system is used.
	echo "${machine}-${os}${release}${abi}"
	exit ;;
    *:bitrig:*:*)
	uname_machine_arch=`arch | sed 's/bitrig.//'`
	echo ${uname_machine_arch}-unknown-bitrig${uname_release}
	exit ;;
    *:openbsd:*:*)
	uname_machine_arch=`arch | sed 's/openbsd.//'`
	echo ${uname_machine_arch}-unknown-openbsd${uname_release}
	exit ;;
    *:ekkobsd:*:*)
	echo ${uname_machine}-unknown-ekkobsd${uname_release}
	exit ;;
    *:solidbsd:*:*)
	echo ${uname_machine}-unknown-solidbsd${uname_release}
	exit ;;
    macppc:mirbsd:*:*)
	echo powerpc-unknown-mirbsd${uname_release}
	exit ;;
    *:mirbsd:*:*)
	echo ${uname_machine}-unknown-mirbsd${uname_release}
	exit ;;
    alpha:osf1:*:*)
	case $uname_release in
	*4.0)
		uname_release=`/usr/sbin/sizer -v | awk '{print $3}'`
		;;
	*5.*)
		uname_release=`/usr/sbin/sizer -v | awk '{print $4}'`
		;;
	esac
	# according to compaq, /usr/sbin/psrinfo has been available on
	# osf/1 and tru64 systems produced since 1995.  i hope that
	# covers most systems running today.  this code pipes the cpu
	# types through head -n 1, so we only detect the type of cpu 0.
	alpha_cpu_type=`/usr/sbin/psrinfo -v | sed -n -e 's/^  the alpha \(.*\) processor.*$/\1/p' | head -n 1`
	case "$alpha_cpu_type" in
	    "ev4 (21064)")
		uname_machine="alpha" ;;
	    "ev4.5 (21064)")
		uname_machine="alpha" ;;
	    "lca4 (21066/21068)")
		uname_machine="alpha" ;;
	    "ev5 (21164)")
		uname_machine="alphaev5" ;;
	    "ev5.6 (21164a)")
		uname_machine="alphaev56" ;;
	    "ev5.6 (21164pc)")
		uname_machine="alphapca56" ;;
	    "ev5.7 (21164pc)")
		uname_machine="alphapca57" ;;
	    "ev6 (21264)")
		uname_machine="alphaev6" ;;
	    "ev6.7 (21264a)")
		uname_machine="alphaev67" ;;
	    "ev6.8cb (21264c)")
		uname_machine="alphaev68" ;;
	    "ev6.8al (21264b)")
		uname_machine="alphaev68" ;;
	    "ev6.8cx (21264d)")
		uname_machine="alphaev68" ;;
	    "ev6.9a (21264/ev69a)")
		uname_machine="alphaev69" ;;
	    "ev7 (21364)")
		uname_machine="alphaev7" ;;
	    "ev7.9 (21364a)")
		uname_machine="alphaev79" ;;
	esac
	# a pn.n version is a patched version.
	# a vn.n version is a released version.
	# a tn.n version is a released field test version.
	# a xn.n version is an unreleased experimental baselevel.
	# 1.2 uses "1.2" for uname -r.
	echo ${uname_machine}-dec-osf`echo ${uname_release} | sed -e 's/^[pvtx]//' | tr 'abcdefghijklmnopqrstuvwxyz' 'abcdefghijklmnopqrstuvwxyz'`
	# reset exit trap before exiting to avoid spurious non-zero exit code.
	exitcode=$?
	trap '' 0
	exit $exitcode ;;
    alpha\ *:windows_nt*:*)
	# how do we know it's interix rather than the generic posix subsystem?
	# should we change uname_machine based on the output of uname instead
	# of the specific alpha model?
	echo alpha-pc-interix
	exit ;;
    21064:windows_nt:50:3)
	echo alpha-dec-winnt3.5
	exit ;;
    amiga*:unix_system_v:4.0:*)
	echo m68k-unknown-sysv4
	exit ;;
    *:[aa]miga[oo][ss]:*:*)
	echo ${uname_machine}-unknown-amigaos
	exit ;;
    *:[mm]orph[oo][ss]:*:*)
	echo ${uname_machine}-unknown-morphos
	exit ;;
    *:os/390:*:*)
	echo i370-ibm-openedition
	exit ;;
    *:z/vm:*:*)
	echo s390-ibm-zvmoe
	exit ;;
    *:os400:*:*)
	echo powerpc-ibm-os400
	exit ;;
    arm:risc*:1.[012]*:*|arm:riscix:1.[012]*:*)
	echo arm-acorn-riscix${uname_release}
	exit ;;
    arm*:riscos:*:*|arm*:riscos:*:*)
	echo arm-unknown-riscos
	exit ;;
    sr2?01:hi-ux/mpp:*:* | sr8000:hi-ux/mpp:*:*)
	echo hppa1.1-hitachi-hiuxmpp
	exit ;;
    pyramid*:osx*:*:* | mis*:osx*:*:* | mis*:smp_dc-osx*:*:*)
	# akee@wpdis03.wpafb.af.mil (earle f. ake) contributed mis and nile.
	if test "`(/bin/universe) 2>/dev/null`" = att ; then
		echo pyramid-pyramid-sysv3
	else
		echo pyramid-pyramid-bsd
	fi
	exit ;;
    nile*:*:*:dcosx)
	echo pyramid-pyramid-svr4
	exit ;;
    drs?6000:unix:4.0:6*)
	echo sparc-icl-nx6
	exit ;;
    drs?6000:unix_sv:4.2*:7* | drs?6000:isis:4.2*:7*)
	case `/usr/bin/uname -p` in
	    sparc) echo sparc-icl-nx7; exit ;;
	esac ;;
    s390x:sunos:*:*)
	echo ${uname_machine}-ibm-solaris2`echo ${uname_release}|sed -e 's/[^.]*//'`
	exit ;;
    sun4h:sunos:5.*:*)
	echo sparc-hal-solaris2`echo ${uname_release}|sed -e 's/[^.]*//'`
	exit ;;
    sun4*:sunos:5.*:* | tadpole*:sunos:5.*:*)
	echo sparc-sun-solaris2`echo ${uname_release}|sed -e 's/[^.]*//'`
	exit ;;
    i86pc:auroraux:5.*:* | i86xen:auroraux:5.*:*)
	echo i386-pc-auroraux${uname_release}
	exit ;;
    i86pc:sunos:5.*:* | i86xen:sunos:5.*:*)
	eval $set_cc_for_build
	sun_arch="i386"
	# if there is a compiler, see if it is configured for 64-bit objects.
	# note that the sun cc does not turn __lp64__ into 1 like gcc does.
	# this test works for both compilers.
	if [ "$cc_for_build" != 'no_compiler_found' ]; then
	    if (echo '#ifdef __amd64'; echo is_64bit_arch; echo '#endif') | \
		(ccopts= $cc_for_build -e - 2>/dev/null) | \
		grep is_64bit_arch >/dev/null
	    then
		sun_arch="x86_64"
	    fi
	fi
	echo ${sun_arch}-pc-solaris2`echo ${uname_release}|sed -e 's/[^.]*//'`
	exit ;;
    sun4*:sunos:6*:*)
	# according to config.sub, this is the proper way to canonicalize
	# sunos6.  hard to guess exactly what sunos6 will be like, but
	# it's likely to be more like solaris than sunos4.
	echo sparc-sun-solaris3`echo ${uname_release}|sed -e 's/[^.]*//'`
	exit ;;
    sun4*:sunos:*:*)
	case "`/usr/bin/arch -k`" in
	    series*|s4*)
		uname_release=`uname -v`
		;;
	esac
	# japanese language versions have a version number like `4.1.3-jl'.
	echo sparc-sun-sunos`echo ${uname_release}|sed -e 's/-/_/'`
	exit ;;
    sun3*:sunos:*:*)
	echo m68k-sun-sunos${uname_release}
	exit ;;
    sun*:*:4.2bsd:*)
	uname_release=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
	test "x${uname_release}" = "x" && uname_release=3
	case "`/bin/arch`" in
	    sun3)
		echo m68k-sun-sunos${uname_release}
		;;
	    sun4)
		echo sparc-sun-sunos${uname_release}
		;;
	esac
	exit ;;
    aushp:sunos:*:*)
	echo sparc-auspex-sunos${uname_release}
	exit ;;
    # the situation for mint is a little confusing.  the machine name
    # can be virtually everything (everything which is not
    # "atarist" or "atariste" at least should have a processor
    # > m68000).  the system name ranges from "mint" over "freemint"
    # to the lowercase version "mint" (or "freemint").  finally
    # the system name "tos" denotes a system which is actually not
    # mint.  but mint is downward compatible to tos, so this should
    # be no problem.
    atarist[e]:*mint:*:* | atarist[e]:*mint:*:* | atarist[e]:*tos:*:*)
	echo m68k-atari-mint${uname_release}
	exit ;;
    atari*:*mint:*:* | atari*:*mint:*:* | atarist[e]:*tos:*:*)
	echo m68k-atari-mint${uname_release}
	exit ;;
    *falcon*:*mint:*:* | *falcon*:*mint:*:* | *falcon*:*tos:*:*)
	echo m68k-atari-mint${uname_release}
	exit ;;
    milan*:*mint:*:* | milan*:*mint:*:* | *milan*:*tos:*:*)
	echo m68k-milan-mint${uname_release}
	exit ;;
    hades*:*mint:*:* | hades*:*mint:*:* | *hades*:*tos:*:*)
	echo m68k-hades-mint${uname_release}
	exit ;;
    *:*mint:*:* | *:*mint:*:* | *:*tos:*:*)
	echo m68k-unknown-mint${uname_release}
	exit ;;
    m68k:machten:*:*)
	echo m68k-apple-machten${uname_release}
	exit ;;
    powerpc:machten:*:*)
	echo powerpc-apple-machten${uname_release}
	exit ;;
    risc*:mach:*:*)
	echo mips-dec-mach_bsd4.3
	exit ;;
    risc*:ultrix:*:*)
	echo mips-dec-ultrix${uname_release}
	exit ;;
    vax*:ultrix*:*:*)
	echo vax-dec-ultrix${uname_release}
	exit ;;
    2020:clix:*:* | 2430:clix:*:*)
	echo clipper-intergraph-clix${uname_release}
	exit ;;
    mips:*:*:umips | mips:*:*:riscos)
	eval $set_cc_for_build
	sed 's/^	//' << eof >$dummy.c
#ifdef __cplusplus
#include <stdio.h>  /* for printf() prototype */
	int main (int argc, char *argv[]) {
#else
	int main (argc, argv) int argc; char *argv[]; {
#endif
	#if defined (host_mips) && defined (mipseb)
	#if defined (systype_sysv)
	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
	#endif
	#if defined (systype_svr4)
	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
	#endif
	#if defined (systype_bsd43) || defined(systype_bsd)
	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
	#endif
	#endif
	  exit (-1);
	}
eof
	$cc_for_build -o $dummy $dummy.c &&
	  dummyarg=`echo "${uname_release}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
	  system_name=`$dummy $dummyarg` &&
	    { echo "$system_name"; exit; }
	echo mips-mips-riscos${uname_release}
	exit ;;
    motorola:powermax_os:*:*)
	echo powerpc-motorola-powermax
	exit ;;
    motorola:*:4.3:pl8-*)
	echo powerpc-harris-powermax
	exit ;;
    night_hawk:*:*:powermax_os | synergy:powermax_os:*:*)
	echo powerpc-harris-powermax
	exit ;;
    night_hawk:power_unix:*:*)
	echo powerpc-harris-powerunix
	exit ;;
    m88k:cx/ux:7*:*)
	echo m88k-harris-cxux7
	exit ;;
    m88k:*:4*:r4*)
	echo m88k-motorola-sysv4
	exit ;;
    m88k:*:3*:r3*)
	echo m88k-motorola-sysv3
	exit ;;
    aviion:dgux:*:*)
	# dg/ux returns aviion for all architectures
	uname_processor=`/usr/bin/uname -p`
	if [ $uname_processor = mc88100 ] || [ $uname_processor = mc88110 ]
	then
	    if [ ${target_binary_interface}x = m88kdguxelfx ] || \
	       [ ${target_binary_interface}x = x ]
	    then
		echo m88k-dg-dgux${uname_release}
	    else
		echo m88k-dg-dguxbcs${uname_release}
	    fi
	else
	    echo i586-dg-dgux${uname_release}
	fi
	exit ;;
    m88*:dolphinos:*:*)	# dolphinos (svr3)
	echo m88k-dolphin-sysv3
	exit ;;
    m88*:*:r3*:*)
	# delta 88k system running svr3
	echo m88k-motorola-sysv3
	exit ;;
    xd88*:*:*:*) # tektronix xd88 system running utekv (svr3)
	echo m88k-tektronix-sysv3
	exit ;;
    tek43[0-9][0-9]:utek:*:*) # tektronix 4300 system running utek (bsd)
	echo m68k-tektronix-bsd
	exit ;;
    *:irix*:*:*)
	echo mips-sgi-irix`echo ${uname_release}|sed -e 's/-/_/g'`
	exit ;;
    ????????:aix?:[12].1:2)   # aix 2.2.1 or aix 2.1.1 is rt/pc aix.
	echo romp-ibm-aix     # uname -m gives an 8 hex-code cpu id
	exit ;;               # note that: echo "'`uname -s`'" gives 'aix '
    i*86:aix:*:*)
	echo i386-ibm-aix
	exit ;;
    ia64:aix:*:*)
	if [ -x /usr/bin/oslevel ] ; then
		ibm_rev=`/usr/bin/oslevel`
	else
		ibm_rev=${uname_version}.${uname_release}
	fi
	echo ${uname_machine}-ibm-aix${ibm_rev}
	exit ;;
    *:aix:2:3)
	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
		eval $set_cc_for_build
		sed 's/^		//' << eof >$dummy.c
		#include <sys/systemcfg.h>

		main()
			{
			if (!__power_pc())
				exit(1);
			puts("powerpc-ibm-aix3.2.5");
			exit(0);
			}
eof
		if $cc_for_build -o $dummy $dummy.c && system_name=`$dummy`
		then
			echo "$system_name"
		else
			echo rs6000-ibm-aix3.2.5
		fi
	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
		echo rs6000-ibm-aix3.2.4
	else
		echo rs6000-ibm-aix3.2
	fi
	exit ;;
    *:aix:*:[4567])
	ibm_cpu_id=`/usr/sbin/lsdev -c -c processor -s available | sed 1q | awk '{ print $1 }'`
	if /usr/sbin/lsattr -el ${ibm_cpu_id} | grep ' power' >/dev/null 2>&1; then
		ibm_arch=rs6000
	else
		ibm_arch=powerpc
	fi
	if [ -x /usr/bin/lslpp ] ; then
		ibm_rev=`/usr/bin/lslpp -lqc bos.rte.libc |
			   awk -f: '{ print $3 }' | sed s/[0-9]*$/0/`
	else
		ibm_rev=${uname_version}.${uname_release}
	fi
	echo ${ibm_arch}-ibm-aix${ibm_rev}
	exit ;;
    *:aix:*:*)
	echo rs6000-ibm-aix
	exit ;;
    ibmrt:4.4bsd:*|romp-ibm:bsd:*)
	echo romp-ibm-bsd4.4
	exit ;;
    ibmrt:*bsd:*|romp-ibm:bsd:*)            # covers rt/pc bsd and
	echo romp-ibm-bsd${uname_release}   # 4.3 with uname added to
	exit ;;                             # report: romp-ibm bsd 4.3
    *:bosx:*:*)
	echo rs6000-bull-bosx
	exit ;;
    dpx/2?00:b.o.s.:*:*)
	echo m68k-bull-sysv3
	exit ;;
    9000/[34]??:4.3bsd:1.*:*)
	echo m68k-hp-bsd
	exit ;;
    hp300:4.4bsd:*:* | 9000/[34]??:4.3bsd:2.*:*)
	echo m68k-hp-bsd4.4
	exit ;;
    9000/[34678]??:hp-ux:*:*)
	hpux_rev=`echo ${uname_release}|sed -e 's/[^.]*.[0b]*//'`
	case "${uname_machine}" in
	    9000/31? )            hp_arch=m68000 ;;
	    9000/[34]?? )         hp_arch=m68k ;;
	    9000/[678][0-9][0-9])
		if [ -x /usr/bin/getconf ]; then
		    sc_cpu_version=`/usr/bin/getconf sc_cpu_version 2>/dev/null`
		    sc_kernel_bits=`/usr/bin/getconf sc_kernel_bits 2>/dev/null`
		    case "${sc_cpu_version}" in
		      523) hp_arch="hppa1.0" ;; # cpu_pa_risc1_0
		      528) hp_arch="hppa1.1" ;; # cpu_pa_risc1_1
		      532)                      # cpu_pa_risc2_0
			case "${sc_kernel_bits}" in
			  32) hp_arch="hppa2.0n" ;;
			  64) hp_arch="hppa2.0w" ;;
			  '') hp_arch="hppa2.0" ;;   # hp-ux 10.20
			esac ;;
		    esac
		fi
		if [ "${hp_arch}" = "" ]; then
		    eval $set_cc_for_build
		    sed 's/^		//' << eof >$dummy.c

		#define _hpux_source
		#include <stdlib.h>
		#include <unistd.h>

		int main ()
		{
		#if defined(_sc_kernel_bits)
		    long bits = sysconf(_sc_kernel_bits);
		#endif
		    long cpu  = sysconf (_sc_cpu_version);

		    switch (cpu)
			{
			case cpu_pa_risc1_0: puts ("hppa1.0"); break;
			case cpu_pa_risc1_1: puts ("hppa1.1"); break;
			case cpu_pa_risc2_0:
		#if defined(_sc_kernel_bits)
			    switch (bits)
				{
				case 64: puts ("hppa2.0w"); break;
				case 32: puts ("hppa2.0n"); break;
				default: puts ("hppa2.0"); break;
				} break;
		#else  /* !defined(_sc_kernel_bits) */
			    puts ("hppa2.0"); break;
		#endif
			default: puts ("hppa1.0"); break;
			}
		    exit (0);
		}
eof
		    (ccopts= $cc_for_build -o $dummy $dummy.c 2>/dev/null) && hp_arch=`$dummy`
		    test -z "$hp_arch" && hp_arch=hppa
		fi ;;
	esac
	if [ ${hp_arch} = "hppa2.0w" ]
	then
	    eval $set_cc_for_build

	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
	    # generating 64-bit code.  gnu and hp use different nomenclature:
	    #
	    # $ cc_for_build=cc ./config.guess
	    # => hppa2.0w-hp-hpux11.23
	    # $ cc_for_build="cc +da2.0w" ./config.guess
	    # => hppa64-hp-hpux11.23

	    if echo __lp64__ | (ccopts= $cc_for_build -e - 2>/dev/null) |
		grep -q __lp64__
	    then
		hp_arch="hppa2.0w"
	    else
		hp_arch="hppa64"
	    fi
	fi
	echo ${hp_arch}-hp-hpux${hpux_rev}
	exit ;;
    ia64:hp-ux:*:*)
	hpux_rev=`echo ${uname_release}|sed -e 's/[^.]*.[0b]*//'`
	echo ia64-hp-hpux${hpux_rev}
	exit ;;
    3050*:hi-ux:*:*)
	eval $set_cc_for_build
	sed 's/^	//' << eof >$dummy.c
	#include <unistd.h>
	int
	main ()
	{
	  long cpu = sysconf (_sc_cpu_version);
	  /* the order matters, because cpu_is_hp_mc68k erroneously returns
	     true for cpu_pa_risc1_0.  cpu_is_pa_risc returns correct
	     results, however.  */
	  if (cpu_is_pa_risc (cpu))
	    {
	      switch (cpu)
		{
		  case cpu_pa_risc1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
		  case cpu_pa_risc1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
		  case cpu_pa_risc2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
		  default: puts ("hppa-hitachi-hiuxwe2"); break;
		}
	    }
	  else if (cpu_is_hp_mc68k (cpu))
	    puts ("m68k-hitachi-hiuxwe2");
	  else puts ("unknown-hitachi-hiuxwe2");
	  exit (0);
	}
eof
	$cc_for_build -o $dummy $dummy.c && system_name=`$dummy` &&
		{ echo "$system_name"; exit; }
	echo unknown-hitachi-hiuxwe2
	exit ;;
    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
	echo hppa1.1-hp-bsd
	exit ;;
    9000/8??:4.3bsd:*:*)
	echo hppa1.0-hp-bsd
	exit ;;
    *9??*:mpe/ix:*:* | *3000*:mpe/ix:*:*)
	echo hppa1.0-hp-mpeix
	exit ;;
    hp7??:osf1:*:* | hp8?[79]:osf1:*:* )
	echo hppa1.1-hp-osf
	exit ;;
    hp8??:osf1:*:*)
	echo hppa1.0-hp-osf
	exit ;;
    i*86:osf1:*:*)
	if [ -x /usr/sbin/sysversion ] ; then
	    echo ${uname_machine}-unknown-osf1mk
	else
	    echo ${uname_machine}-unknown-osf1
	fi
	exit ;;
    parisc*:lites*:*:*)
	echo hppa1.1-hp-lites
	exit ;;
    c1*:convexos:*:* | convex:convexos:c1*:*)
	echo c1-convex-bsd
	exit ;;
    c2*:convexos:*:* | convex:convexos:c2*:*)
	if getsysinfo -f scalar_acc
	then echo c32-convex-bsd
	else echo c2-convex-bsd
	fi
	exit ;;
    c34*:convexos:*:* | convex:convexos:c34*:*)
	echo c34-convex-bsd
	exit ;;
    c38*:convexos:*:* | convex:convexos:c38*:*)
	echo c38-convex-bsd
	exit ;;
    c4*:convexos:*:* | convex:convexos:c4*:*)
	echo c4-convex-bsd
	exit ;;
    cray*y-mp:*:*:*)
	echo ymp-cray-unicos${uname_release} | sed -e 's/\.[^.]*$/.x/'
	exit ;;
    cray*[a-z]90:*:*:*)
	echo ${uname_machine}-cray-unicos${uname_release} \
	| sed -e 's/cray.*\([a-z]90\)/\1/' \
	      -e y/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/ \
	      -e 's/\.[^.]*$/.x/'
	exit ;;
    cray*ts:*:*:*)
	echo t90-cray-unicos${uname_release} | sed -e 's/\.[^.]*$/.x/'
	exit ;;
    cray*t3e:*:*:*)
	echo alphaev5-cray-unicosmk${uname_release} | sed -e 's/\.[^.]*$/.x/'
	exit ;;
    cray*sv1:*:*:*)
	echo sv1-cray-unicos${uname_release} | sed -e 's/\.[^.]*$/.x/'
	exit ;;
    *:unicos/mp:*:*)
	echo craynv-cray-unicosmp${uname_release} | sed -e 's/\.[^.]*$/.x/'
	exit ;;
    f30[01]:unix_system_v:*:* | f700:unix_system_v:*:*)
	fujitsu_proc=`uname -m | tr 'abcdefghijklmnopqrstuvwxyz' 'abcdefghijklmnopqrstuvwxyz'`
	fujitsu_sys=`uname -p | tr 'abcdefghijklmnopqrstuvwxyz' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
	fujitsu_rel=`echo ${uname_release} | sed -e 's/ /_/'`
	echo "${fujitsu_proc}-fujitsu-${fujitsu_sys}${fujitsu_rel}"
	exit ;;
    5000:unix_system_v:4.*:*)
	fujitsu_sys=`uname -p | tr 'abcdefghijklmnopqrstuvwxyz' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
	fujitsu_rel=`echo ${uname_release} | tr 'abcdefghijklmnopqrstuvwxyz' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
	echo "sparc-fujitsu-${fujitsu_sys}${fujitsu_rel}"
	exit ;;
    i*86:bsd/386:*:* | i*86:bsd/os:*:* | *:ascend\ embedded/os:*:*)
	echo ${uname_machine}-pc-bsdi${uname_release}
	exit ;;
    sparc*:bsd/os:*:*)
	echo sparc-unknown-bsdi${uname_release}
	exit ;;
    *:bsd/os:*:*)
	echo ${uname_machine}-unknown-bsdi${uname_release}
	exit ;;
    *:freebsd:*:*)
	uname_processor=`/usr/bin/uname -p`
	case ${uname_processor} in
	    amd64)
		echo x86_64-unknown-freebsd`echo ${uname_release}|sed -e 's/[-(].*//'` ;;
	    *)
		echo ${uname_processor}-unknown-freebsd`echo ${uname_release}|sed -e 's/[-(].*//'` ;;
	esac
	exit ;;
    i*:cygwin*:*)
	echo ${uname_machine}-pc-cygwin
	exit ;;
    *:mingw64*:*)
	echo ${uname_machine}-pc-mingw64
	exit ;;
    *:mingw*:*)
	echo ${uname_machine}-pc-mingw32
	exit ;;
    *:msys*:*)
	echo ${uname_machine}-pc-msys
	exit ;;
    i*:windows32*:*)
	# uname -m includes "-pc" on this system.
	echo ${uname_machine}-mingw32
	exit ;;
    i*:pw*:*)
	echo ${uname_machine}-pc-pw32
	exit ;;
    *:interix*:*)
	case ${uname_machine} in
	    x86)
		echo i586-pc-interix${uname_release}
		exit ;;
	    authenticamd | genuineintel | em64t)
		echo x86_64-unknown-interix${uname_release}
		exit ;;
	    ia64)
		echo ia64-unknown-interix${uname_release}
		exit ;;
	esac ;;
    [345]86:windows_95:* | [345]86:windows_98:* | [345]86:windows_nt:*)
	echo i${uname_machine}-pc-mks
	exit ;;
    8664:windows_nt:*)
	echo x86_64-pc-mks
	exit ;;
    i*:windows_nt*:* | pentium*:windows_nt*:*)
	# how do we know it's interix rather than the generic posix subsystem?
	# it also conflicts with pre-2.0 versions of at&t uwin. should we
	# uname_machine based on the output of uname instead of i386?
	echo i586-pc-interix
	exit ;;
    i*:uwin*:*)
	echo ${uname_machine}-pc-uwin
	exit ;;
    amd64:cygwin*:*:* | x86_64:cygwin*:*:*)
	echo x86_64-unknown-cygwin
	exit ;;
    p*:cygwin*:*)
	echo powerpcle-unknown-cygwin
	exit ;;
    prep*:sunos:5.*:*)
	echo powerpcle-unknown-solaris2`echo ${uname_release}|sed -e 's/[^.]*//'`
	exit ;;
    *:gnu:*:*)
	# the gnu system
	echo `echo ${uname_machine}|sed -e 's,[-/].*$,,'`-unknown-${libc}`echo ${uname_release}|sed -e 's,/.*$,,'`
	exit ;;
    *:gnu/*:*:*)
	# other systems with gnu libc and userland
	echo ${uname_machine}-unknown-`echo ${uname_system} | sed 's,^[^/]*/,,' | tr '[a-z]' '[a-z]'``echo ${uname_release}|sed -e 's/[-(].*//'`-${libc}
	exit ;;
    i*86:minix:*:*)
	echo ${uname_machine}-pc-minix
	exit ;;
    aarch64:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    aarch64_be:linux:*:*)
	uname_machine=aarch64_be
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    alpha:linux:*:*)
	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
	  ev5)   uname_machine=alphaev5 ;;
	  ev56)  uname_machine=alphaev56 ;;
	  pca56) uname_machine=alphapca56 ;;
	  pca57) uname_machine=alphapca56 ;;
	  ev6)   uname_machine=alphaev6 ;;
	  ev67)  uname_machine=alphaev67 ;;
	  ev68*) uname_machine=alphaev68 ;;
	esac
	objdump --private-headers /bin/sh | grep -q ld.so.1
	if test "$?" = 0 ; then libc="gnulibc1" ; fi
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    arc:linux:*:* | arceb:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    arm*:linux:*:*)
	eval $set_cc_for_build
	if echo __arm_eabi__ | $cc_for_build -e - 2>/dev/null \
	    | grep -q __arm_eabi__
	then
	    echo ${uname_machine}-unknown-linux-${libc}
	else
	    if echo __arm_pcs_vfp | $cc_for_build -e - 2>/dev/null \
		| grep -q __arm_pcs_vfp
	    then
		echo ${uname_machine}-unknown-linux-${libc}eabi
	    else
		echo ${uname_machine}-unknown-linux-${libc}eabihf
	    fi
	fi
	exit ;;
    avr32*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    cris:linux:*:*)
	echo ${uname_machine}-axis-linux-${libc}
	exit ;;
    crisv32:linux:*:*)
	echo ${uname_machine}-axis-linux-${libc}
	exit ;;
    e2k:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    frv:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    hexagon:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    i*86:linux:*:*)
	echo ${uname_machine}-pc-linux-${libc}
	exit ;;
    ia64:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    m32r*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    m68*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    mips:linux:*:* | mips64:linux:*:*)
	eval $set_cc_for_build
	sed 's/^	//' << eof >$dummy.c
	#undef cpu
	#undef ${uname_machine}
	#undef ${uname_machine}el
	#if defined(__mipsel__) || defined(__mipsel) || defined(_mipsel) || defined(mipsel)
	cpu=${uname_machine}el
	#else
	#if defined(__mipseb__) || defined(__mipseb) || defined(_mipseb) || defined(mipseb)
	cpu=${uname_machine}
	#else
	cpu=
	#endif
	#endif
eof
	eval `$cc_for_build -e $dummy.c 2>/dev/null | grep '^cpu'`
	test x"${cpu}" != x && { echo "${cpu}-unknown-linux-${libc}"; exit; }
	;;
    openrisc*:linux:*:*)
	echo or1k-unknown-linux-${libc}
	exit ;;
    or32:linux:*:* | or1k*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    padre:linux:*:*)
	echo sparc-unknown-linux-${libc}
	exit ;;
    parisc64:linux:*:* | hppa64:linux:*:*)
	echo hppa64-unknown-linux-${libc}
	exit ;;
    parisc:linux:*:* | hppa:linux:*:*)
	# look for cpu level
	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
	  pa7*) echo hppa1.1-unknown-linux-${libc} ;;
	  pa8*) echo hppa2.0-unknown-linux-${libc} ;;
	  *)    echo hppa-unknown-linux-${libc} ;;
	esac
	exit ;;
    ppc64:linux:*:*)
	echo powerpc64-unknown-linux-${libc}
	exit ;;
    ppc:linux:*:*)
	echo powerpc-unknown-linux-${libc}
	exit ;;
    ppc64le:linux:*:*)
	echo powerpc64le-unknown-linux-${libc}
	exit ;;
    ppcle:linux:*:*)
	echo powerpcle-unknown-linux-${libc}
	exit ;;
    s390:linux:*:* | s390x:linux:*:*)
	echo ${uname_machine}-ibm-linux-${libc}
	exit ;;
    sh64*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    sh*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    sparc:linux:*:* | sparc64:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    tile*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    vax:linux:*:*)
	echo ${uname_machine}-dec-linux-${libc}
	exit ;;
    x86_64:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    xtensa*:linux:*:*)
	echo ${uname_machine}-unknown-linux-${libc}
	exit ;;
    i*86:dynix/ptx:4*:*)
	# ptx 4.0 does uname -s correctly, with dynix/ptx in there.
	# earlier versions are messed up and put the nodename in both
	# sysname and nodename.
	echo i386-sequent-sysv4
	exit ;;
    i*86:unix_sv:4.2mp:2.*)
	# unixware is an offshoot of svr4, but it has its own version
	# number series starting with 2...
	# i am not positive that other svr4 systems won't match this,
	# i just have to hope.  -- rms.
	# use sysv4.2uw... so that sysv4* matches it.
	echo ${uname_machine}-pc-sysv4.2uw${uname_version}
	exit ;;
    i*86:os/2:*:*)
	# if we were able to find `uname', then emx unix compatibility
	# is probably installed.
	echo ${uname_machine}-pc-os2-emx
	exit ;;
    i*86:xts-300:*:stop)
	echo ${uname_machine}-unknown-stop
	exit ;;
    i*86:atheos:*:*)
	echo ${uname_machine}-unknown-atheos
	exit ;;
    i*86:syllable:*:*)
	echo ${uname_machine}-pc-syllable
	exit ;;
    i*86:lynxos:2.*:* | i*86:lynxos:3.[01]*:* | i*86:lynxos:4.[02]*:*)
	echo i386-unknown-lynxos${uname_release}
	exit ;;
    i*86:*dos:*:*)
	echo ${uname_machine}-pc-msdosdjgpp
	exit ;;
    i*86:*:4.*:* | i*86:system_v:4.*:*)
	uname_rel=`echo ${uname_release} | sed 's/\/mp$//'`
	if grep novell /usr/include/link.h >/dev/null 2>/dev/null; then
		echo ${uname_machine}-univel-sysv${uname_rel}
	else
		echo ${uname_machine}-pc-sysv${uname_rel}
	fi
	exit ;;
    i*86:*:5:[678]*)
	# unixware 7.x, openunix and openserver 6.
	case `/bin/uname -x | grep "^machine"` in
	    *486*)	     uname_machine=i486 ;;
	    *pentium)	     uname_machine=i586 ;;
	    *pent*|*celeron) uname_machine=i686 ;;
	esac
	echo ${uname_machine}-unknown-sysv${uname_release}${uname_system}${uname_version}
	exit ;;
    i*86:*:3.2:*)
	if test -f /usr/options/cb.name; then
		uname_rel=`sed -n 's/.*version //p' </usr/options/cb.name`
		echo ${uname_machine}-pc-isc$uname_rel
	elif /bin/uname -x 2>/dev/null >/dev/null ; then
		uname_rel=`(/bin/uname -x|grep release|sed -e 's/.*= //')`
		(/bin/uname -x|grep i80486 >/dev/null) && uname_machine=i486
		(/bin/uname -x|grep '^machine.*pentium' >/dev/null) \
			&& uname_machine=i586
		(/bin/uname -x|grep '^machine.*pent *ii' >/dev/null) \
			&& uname_machine=i686
		(/bin/uname -x|grep '^machine.*pentium pro' >/dev/null) \
			&& uname_machine=i686
		echo ${uname_machine}-pc-sco$uname_rel
	else
		echo ${uname_machine}-pc-sysv32
	fi
	exit ;;
    pc:*:*:*)
	# left here for compatibility:
	# uname -m prints for djgpp always 'pc', but it prints nothing about
	# the processor, so we play safe by assuming i586.
	# note: whatever this is, it must be the same as what config.sub
	# prints for the "djgpp" host, or else gdb configury will decide that
	# this is a cross-build.
	echo i586-pc-msdosdjgpp
	exit ;;
    intel:mach:3*:*)
	echo i386-pc-mach3
	exit ;;
    paragon:*:*:*)
	echo i860-intel-osf1
	exit ;;
    i860:*:4.*:*) # i860-svr4
	if grep stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
	  echo i860-stardent-sysv${uname_release} # stardent vistra i860-svr4
	else # add other i860-svr4 vendors below as they are discovered.
	  echo i860-unknown-sysv${uname_release}  # unknown i860-svr4
	fi
	exit ;;
    mini*:ctix:sys*5:*)
	# "miniframe"
	echo m68010-convergent-sysv
	exit ;;
    mc68k:unix:system5:3.51m)
	echo m68k-convergent-sysv
	exit ;;
    m680?0:d-nix:5.3:*)
	echo m68k-diab-dnix
	exit ;;
    m68*:*:r3v[5678]*:*)
	test -r /sysv68 && { echo 'm68k-motorola-sysv'; exit; } ;;
    3[345]??:*:4.0:3.0 | 3[34]??a:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | ska40:*:4.0:3.0 | sds2:*:4.0:3.0 | shg2:*:4.0:3.0 | s7501*:*:4.0:3.0)
	os_rel=''
	test -r /etc/.relid \
	&& os_rel=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
	  && { echo i486-ncr-sysv4.3${os_rel}; exit; }
	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
	  && { echo i586-ncr-sysv4.3${os_rel}; exit; } ;;
    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
	  && { echo i486-ncr-sysv4; exit; } ;;
    ncr*:*:4.2:* | mpras*:*:4.2:*)
	os_rel='.3'
	test -r /etc/.relid \
	    && os_rel=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
	    && { echo i486-ncr-sysv4.3${os_rel}; exit; }
	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
	    && { echo i586-ncr-sysv4.3${os_rel}; exit; }
	/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \
	    && { echo i586-ncr-sysv4.3${os_rel}; exit; } ;;
    m68*:lynxos:2.*:* | m68*:lynxos:3.0*:*)
	echo m68k-unknown-lynxos${uname_release}
	exit ;;
    mc68030:unix_system_v:4.*:*)
	echo m68k-atari-sysv4
	exit ;;
    tsunami:lynxos:2.*:*)
	echo sparc-unknown-lynxos${uname_release}
	exit ;;
    rs6000:lynxos:2.*:*)
	echo rs6000-unknown-lynxos${uname_release}
	exit ;;
    powerpc:lynxos:2.*:* | powerpc:lynxos:3.[01]*:* | powerpc:lynxos:4.[02]*:*)
	echo powerpc-unknown-lynxos${uname_release}
	exit ;;
    sm[be]s:unix_sv:*:*)
	echo mips-dde-sysv${uname_release}
	exit ;;
    rm*:reliantunix-*:*:*)
	echo mips-sni-sysv4
	exit ;;
    rm*:sinix-*:*:*)
	echo mips-sni-sysv4
	exit ;;
    *:sinix-*:*:*)
	if uname -p 2>/dev/null >/dev/null ; then
		uname_machine=`(uname -p) 2>/dev/null`
		echo ${uname_machine}-sni-sysv4
	else
		echo ns32k-sni-sysv
	fi
	exit ;;
    pentium:*:4.0*:*)	# unisys `clearpath hmp ix 4000' svr4/mp effort
			# says <richard.m.bartel@ccmail.census.gov>
	echo i586-unisys-sysv4
	exit ;;
    *:unix_system_v:4*:ftx*)
	# from gerald hewes <hewes@openmarket.com>.
	# how about differentiating between stratus architectures? -djm
	echo hppa1.1-stratus-sysv4
	exit ;;
    *:*:*:ftx*)
	# from seanf@swdc.stratus.com.
	echo i860-stratus-sysv4
	exit ;;
    i*86:vos:*:*)
	# from paul.green@stratus.com.
	echo ${uname_machine}-stratus-vos
	exit ;;
    *:vos:*:*)
	# from paul.green@stratus.com.
	echo hppa1.1-stratus-vos
	exit ;;
    mc68*:a/ux:*:*)
	echo m68k-apple-aux${uname_release}
	exit ;;
    news*:news-os:6*:*)
	echo mips-sony-newsos6
	exit ;;
    r[34]000:*system_v*:*:* | r4000:unix_sysv:*:* | r*000:unix_sv:*:*)
	if [ -d /usr/nec ]; then
		echo mips-nec-sysv${uname_release}
	else
		echo mips-unknown-sysv${uname_release}
	fi
	exit ;;
    bebox:beos:*:*)	# beos running on hardware made by be, ppc only.
	echo powerpc-be-beos
	exit ;;
    bemac:beos:*:*)	# beos running on mac or mac clone, ppc only.
	echo powerpc-apple-beos
	exit ;;
    bepc:beos:*:*)	# beos running on intel pc compatible.
	echo i586-pc-beos
	exit ;;
    bepc:haiku:*:*)	# haiku running on intel pc compatible.
	echo i586-pc-haiku
	exit ;;
    x86_64:haiku:*:*)
	echo x86_64-unknown-haiku
	exit ;;
    sx-4:super-ux:*:*)
	echo sx4-nec-superux${uname_release}
	exit ;;
    sx-5:super-ux:*:*)
	echo sx5-nec-superux${uname_release}
	exit ;;
    sx-6:super-ux:*:*)
	echo sx6-nec-superux${uname_release}
	exit ;;
    sx-7:super-ux:*:*)
	echo sx7-nec-superux${uname_release}
	exit ;;
    sx-8:super-ux:*:*)
	echo sx8-nec-superux${uname_release}
	exit ;;
    sx-8r:super-ux:*:*)
	echo sx8r-nec-superux${uname_release}
	exit ;;
    power*:rhapsody:*:*)
	echo powerpc-apple-rhapsody${uname_release}
	exit ;;
    *:rhapsody:*:*)
	echo ${uname_machine}-apple-rhapsody${uname_release}
	exit ;;
    *:darwin:*:*)
	uname_processor=`uname -p` || uname_processor=unknown
	eval $set_cc_for_build
	if test "$uname_processor" = unknown ; then
	    uname_processor=powerpc
	fi
	if test `echo "$uname_release" | sed -e 's/\..*//'` -le 10 ; then
	    if [ "$cc_for_build" != 'no_compiler_found' ]; then
		if (echo '#ifdef __lp64__'; echo is_64bit_arch; echo '#endif') | \
		    (ccopts= $cc_for_build -e - 2>/dev/null) | \
		    grep is_64bit_arch >/dev/null
		then
		    case $uname_processor in
			i386) uname_processor=x86_64 ;;
			powerpc) uname_processor=powerpc64 ;;
		    esac
		fi
	    fi
	elif test "$uname_processor" = i386 ; then
	    # avoid executing cc on os x 10.9, as it ships with a stub
	    # that puts up a graphical alert prompting to install
	    # developer tools.  any system running mac os x 10.7 or
	    # later (darwin 11 and later) is required to have a 64-bit
	    # processor. this is not true of the arm version of darwin
	    # that apple uses in portable devices.
	    uname_processor=x86_64
	fi
	echo ${uname_processor}-apple-darwin${uname_release}
	exit ;;
    *:procnto*:*:* | *:qnx:[0123456789]*:*)
	uname_processor=`uname -p`
	if test "$uname_processor" = "x86"; then
		uname_processor=i386
		uname_machine=pc
	fi
	echo ${uname_processor}-${uname_machine}-nto-qnx${uname_release}
	exit ;;
    *:qnx:*:4*)
	echo i386-pc-qnx
	exit ;;
    neo-?:nonstop_kernel:*:*)
	echo neo-tandem-nsk${uname_release}
	exit ;;
    nse-*:nonstop_kernel:*:*)
	echo nse-tandem-nsk${uname_release}
	exit ;;
    nsr-?:nonstop_kernel:*:*)
	echo nsr-tandem-nsk${uname_release}
	exit ;;
    *:nonstop-ux:*:*)
	echo mips-compaq-nonstopux
	exit ;;
    bs2000:posix*:*:*)
	echo bs2000-siemens-sysv
	exit ;;
    ds/*:unix_system_v:*:*)
	echo ${uname_machine}-${uname_system}-${uname_release}
	exit ;;
    *:plan9:*:*)
	# "uname -m" is not consistent, so use $cputype instead. 386
	# is converted to i386 for consistency with other x86
	# operating systems.
	if test "$cputype" = "386"; then
	    uname_machine=i386
	else
	    uname_machine="$cputype"
	fi
	echo ${uname_machine}-unknown-plan9
	exit ;;
    *:tops-10:*:*)
	echo pdp10-unknown-tops10
	exit ;;
    *:tenex:*:*)
	echo pdp10-unknown-tenex
	exit ;;
    ks10:tops-20:*:* | kl10:tops-20:*:* | type4:tops-20:*:*)
	echo pdp10-dec-tops20
	exit ;;
    xkl-1:tops-20:*:* | type5:tops-20:*:*)
	echo pdp10-xkl-tops20
	exit ;;
    *:tops-20:*:*)
	echo pdp10-unknown-tops20
	exit ;;
    *:its:*:*)
	echo pdp10-unknown-its
	exit ;;
    sei:*:*:seiux)
	echo mips-sei-seiux${uname_release}
	exit ;;
    *:dragonfly:*:*)
	echo ${uname_machine}-unknown-dragonfly`echo ${uname_release}|sed -e 's/[-(].*//'`
	exit ;;
    *:*vms:*:*)
	uname_machine=`(uname -p) 2>/dev/null`
	case "${uname_machine}" in
	    a*) echo alpha-dec-vms ; exit ;;
	    i*) echo ia64-dec-vms ; exit ;;
	    v*) echo vax-dec-vms ; exit ;;
	esac ;;
    *:xenix:*:sysv)
	echo i386-pc-xenix
	exit ;;
    i*86:skyos:*:*)
	echo ${uname_machine}-pc-skyos`echo ${uname_release}` | sed -e 's/ .*$//'
	exit ;;
    i*86:rdos:*:*)
	echo ${uname_machine}-pc-rdos
	exit ;;
    i*86:aros:*:*)
	echo ${uname_machine}-pc-aros
	exit ;;
    x86_64:vmkernel:*:*)
	echo ${uname_machine}-unknown-esx
	exit ;;
esac

cat >&2 <<eof
$0: unable to guess system type

this script, last modified $timestamp, has failed to recognize
the operating system you are using. it is advised that you
download the most up to date version of the config scripts from

  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=head
and
  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=head

if the version you run ($0) is already up to date, please
send the following data and any information you think might be
pertinent to <config-patches@gnu.org> in order to provide the needed
information to handle your system.

config.guess timestamp = $timestamp

uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
/bin/uname -x     = `(/bin/uname -x) 2>/dev/null`

hostinfo               = `(hostinfo) 2>/dev/null`
/bin/universe          = `(/bin/universe) 2>/dev/null`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
/bin/arch              = `(/bin/arch) 2>/dev/null`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`

uname_machine = ${uname_machine}
uname_release = ${uname_release}
uname_system  = ${uname_system}
uname_version = ${uname_version}
eof

exit 1

# local variables:
# eval: (add-hook 'write-file-hooks 'time-stamp)
# time-stamp-start: "timestamp='"
# time-stamp-format: "%:y-%02m-%02d"
# time-stamp-end: "'"
# end:
