#!/usr/bin/python
'''
extract _("...") strings for translation and convert to qt4 stringdefs so that
they can be picked up by qt linguist.
'''
from subprocess import popen, pipe
import glob
import operator
import os
import sys

out_cpp="qt/moorecoinstrings.cpp"
empty=['""']

def parse_po(text):
    """
    parse 'po' format produced by xgettext.
    return a list of (msgid,msgstr) tuples.
    """
    messages = []
    msgid = []
    msgstr = []
    in_msgid = false
    in_msgstr = false

    for line in text.split('\n'):
        line = line.rstrip('\r')
        if line.startswith('msgid '):
            if in_msgstr:
                messages.append((msgid, msgstr))
                in_msgstr = false
            # message start
            in_msgid = true
            
            msgid = [line[6:]]
        elif line.startswith('msgstr '):
            in_msgid = false
            in_msgstr = true
            msgstr = [line[7:]]
        elif line.startswith('"'):
            if in_msgid:
                msgid.append(line)
            if in_msgstr:
                msgstr.append(line)

    if in_msgstr:
        messages.append((msgid, msgstr))

    return messages

files = sys.argv[1:]

# xgettext -n --keyword=_ $files
xgettext=os.getenv('xgettext', 'xgettext')
child = popen([xgettext,'--output=-','-n','--keyword=_'] + files, stdout=pipe)
(out, err) = child.communicate()

messages = parse_po(out) 

f = open(out_cpp, 'w')
f.write("""

#include <qtglobal>

// automatically generated by extract_strings.py
#ifdef __gnuc__
#define unused __attribute__((unused))
#else
#define unused
#endif
""")
f.write('static const char unused *moorecoin_strings[] = {\n')
messages.sort(key=operator.itemgetter(0))
for (msgid, msgstr) in messages:
    if msgid != empty:
        f.write('qt_translate_noop("moorecoin-core", %s),\n' % ('\n'.join(msgid)))
f.write('};\n')
f.close()
