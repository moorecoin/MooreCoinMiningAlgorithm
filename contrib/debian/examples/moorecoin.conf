##
## bitcoin.conf configuration file. lines beginning with # are comments.
##
 
# network-related settings:

# run on the test network instead of the real bitcoin network.
#testnet=0

# run a regression test network
#regtest=0

# connect via a socks5 proxy
#proxy=127.0.0.1:9050

# bind to given address and always listen on it. use [host]:port notation for ipv6
#bind=<addr>

# bind to given address and whitelist peers connecting to it. use [host]:port notation for ipv6
#whitebind=<addr>

##############################################################
##            quick primer on addnode vs connect            ##
##  let's say for instance you use addnode=4.2.2.4          ##
##  addnode will connect you to and tell you about the      ##
##    nodes connected to 4.2.2.4.  in addition it will tell ##
##    the other nodes connected to it that you exist so     ##
##    they can connect to you.                              ##
##  connect will not do the above when you 'connect' to it. ##
##    it will *only* connect you to 4.2.2.4 and no one else.##
##                                                          ##
##  so if you're behind a firewall, or have other problems  ##
##  finding nodes, add some using 'addnode'.                ##
##                                                          ##
##  if you want to stay private, use 'connect' to only      ##
##  connect to "trusted" nodes.                             ##
##                                                          ##
##  if you run multiple nodes on a lan, there's no need for ##
##  all of them to open lots of connections.  instead       ##
##  'connect' them all to one node that is port forwarded   ##
##  and has lots of connections.                            ##
##       thanks goes to [noodle] on freenode.               ##
##############################################################

# use as many addnode= settings as you like to connect to specific peers
#addnode=69.164.218.197
#addnode=10.0.0.2:8333

# alternatively use as many connect= settings as you like to connect only to specific peers
#connect=69.164.218.197
#connect=10.0.0.1:8333

# listening mode, enabled by default except when 'connect' is being used
#listen=1

# maximum number of inbound+outbound connections.
#maxconnections=

#
# json-rpc options (for controlling a running bitcoin/bitcoind process)
#

# server=1 tells bitcoin-qt and bitcoind to accept json-rpc commands
#server=0

# bind to given address to listen for json-rpc connections. use [host]:port notation for ipv6.
# this option can be specified multiple times (default: bind to all interfaces)
#rpcbind=<addr>

# you must set rpcuser and rpcpassword to secure the json-rpc api
#rpcuser=ulysseys
#rpcpassword=yoursupergreatpasswordnumber_do_not_use_this_or_you_will_get_robbed_385593

# how many seconds bitcoin will wait for a complete rpc http request.
# after the http connection is established. 
#rpctimeout=30

# by default, only rpc connections from localhost are allowed.
# specify as many rpcallowip= settings as you like to allow connections from other hosts,
# either as a single ipv4/ipv6 or with a subnet specification.

# note: opening up the rpc port to hosts outside your local trusted network is not recommended,
# because the rpcpassword is transmitted over the network unencrypted.

# server=1 tells bitcoin-qt to accept json-rpc commands.
# it is also read by bitcoind to determine if rpc should be enabled 
#rpcallowip=10.1.1.34/255.255.255.0
#rpcallowip=1.2.3.4/24
#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96

# listen for rpc connections on this tcp port:
#rpcport=8332

# you can use bitcoin or bitcoind to send commands to bitcoin/bitcoind
# running on another host using this option:
#rpcconnect=127.0.0.1

# use secure sockets layer (also known as tls or https) to communicate
# with bitcoin -server or bitcoind
#rpcssl=1

# openssl settings used when rpcssl=1
#rpcsslciphers=tlsv1+high:!sslv2:!anull:!enull:!ah:!3des:@strength
#rpcsslcertificatechainfile=server.cert
#rpcsslprivatekeyfile=server.pem

# transaction fee changes in 0.10.0

# send transactions as zero-fee transactions if possible (default: 0)
#sendfreetransactions=0

# create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).
# this setting is over-ridden by the -paytxfee option.
#txconfirmtarget=n

# miscellaneous options

# pre-generate this many public/private key pairs, so wallet backups will be valid for
# both prior transactions and several dozen future transactions.
#keypool=100

# pay an optional transaction fee every time you send bitcoins.  transactions with fees
# are more likely than free transactions to be included in generated blocks, so may
# be validated sooner.
#paytxfee=0.00

# user interface options

# start bitcoin minimized
#min=1

# minimize to the system tray
#minimizetotray=1
